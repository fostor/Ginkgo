@using Fostor.Ginkgo.Web.Startup
@using Fostor.Ginkgo
@using Fostor.Ginkgo.Web.Views.Shared.Components.MaterialDatePicker
@using Fostor.Ginkgo.Web.Views.Shared.Components.CommonModal
@{
    ViewData["Title"] = "LeaveApplication";
    ViewBag.CurrentPageName = "TaskFlow.TaskSample"; //The menu item will be active for this page.
    string otherButton = @"<button type=""button"" class=""btn btn-primary send-flow-button waves-effect m-l-50"">"+@L("SendFlow")+"</button>";
    //otherButton = Html.Encode(otherButton);
}
@section scripts
    {

    <environment names="Development">
        <script src="~/view-resources/TaskSample/Leave/Index.js" asp-append-version="true"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/view-resources/TaskSample/Leave/Index.min.js" asp-append-version="true"></script>
    </environment>
}


<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    @L("LeaveApplication")
                </h2>
                <form name="SearchForm" role="form" novalidate class="form-validation form-horizontal">
                    <div class="form-group">
                        <label class="col-md-2 control-label">@L("Applicant")</label>
                        <div class="col-md-2">
                            <div class="form-line">
                                <input class="form-control" type="text" name="Applicant">
                            </div>
                        </div>
                        <label class="col-md-2 control-label">@L("CreationTime")</label>
                        <div class="col-md-2" style="min-width:120px;">
                            @await Component.InvokeAsync(typeof(MaterialDatePickerViewComponent), new { tagName = "FromDate", value = @DateTime.Now.AddMonths(-1).ToShortDateString(), showTime = "1" })
                        </div>
                        <label class="col-md-1 control-label" style="text-align:center;max-width:30px;">@L("To")</label>
                        <div class="col-md-2" style="min-width:120px;">
                            @await Component.InvokeAsync(typeof(MaterialDatePickerViewComponent), new { tagName = "ToDate", value = @DateTime.Now.ToShortDateString(), showTime = "1" })
                        </div>
                        <div class="col-md-2" style="width:80px;">
                            <button type="button" id="btnSearch" class="btn btn-primary waves-effect" style="margin-left:20px;"><i class="small material-icons">search</i></button>
                        </div>
                        <div class="col-md-2 pull-right" style="width:80px;">
                            <button type="button" class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right add-leave" data-toggle="modal" data-target="#LeaveCreateModal">
                                <i class="material-icons">add</i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="datatables-container">
                <table id="table_100" class="table table-condensed table-bordered" style="min-width:100%;">
                    <thead>
                        <tr>
                            <th>@L("AppliNumber")</th>
                            <th>@L("Applicant")</th>
                            <th>@L("Title")</th>
                            <th>@L("Edit")</th>
                            <th>@L("Delete")</th>
                            <th>@L("Description")</th>
                            <th>@L("LeaveType")</th>
                            <th>@L("FromTime")</th>
                            <th>@L("EndTime")</th>
                            <th>@L("TotalHours")</th>
                            <th>@L("Status")</th>
                            <th>@L("LastModificationTime")</th>
                            <th style="min-width:80px;">@L("CreationTime")</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th>@L("AppliNumber")</th>
                            <th>@L("Applicant")</th>
                            <th>@L("Title")</th>
                            <th>@L("Edit")</th>
                            <th>@L("Delete")</th>
                            <th>@L("Description")</th>
                            <th>@L("LeaveType")</th>
                            <th>@L("FromTime")</th>
                            <th>@L("EndTime")</th>
                            <th>@L("TotalHours")</th>
                            <th>@L("Status")</th>
                            <th>@L("LastModificationTime")</th>
                            <th style="min-width:80px;">@L("CreationTime")</th>
                        </tr>
                    </tfoot>
                </table>
            </div>

        </div>
    </div>
</div>

@await Component.InvokeAsync(typeof(CommonModalViewComponent), new { modalName = "LeaveCreate", modalTitle = @L("AddLeave") })
@await Component.InvokeAsync(typeof(CommonModalViewComponent), new { modalName = "LeaveEdit", modalTitle = @L("EditLeave"), otherBtnHtml = otherButton })





