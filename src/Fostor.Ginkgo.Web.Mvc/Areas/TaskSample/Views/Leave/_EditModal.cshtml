@using Fostor.Ginkgo.Web.Models.Common.Modals
@using System.Collections.Generic
@using Fostor.Ginkgo.Web.Views.Shared.Components.DataConfigSelector
@using Fostor.Ginkgo.Web.Views.Shared.Components.MaterialDatePicker
@model Fostor.Ginkgo.Web.Areas.TaskSample.Models.LeaveViewModel
@{
    Layout = null;
}


<bs-form name="LeaveEditForm">
    <input type="hidden" name="Id" value="@Model.Leave.Id" />
    <bs-row>        
        <bs-label>@L("AppliNumber")<bs-star></bs-star></bs-label>
        <bs-input name="AppliNumber" value="@Model.Leave.AppliNumber" maxlength="20" readonly="readonly"></bs-input>        
        <bs-label>@L("Status")<bs-star></bs-star></bs-label>
        <div class="col-md-4">
            @await Component.InvokeAsync(typeof(DataConfigSelectorViewComponent), new { configCode = "LeaveAppliStatus", tagName = "Status", selectedValue = Model.Leave.Status, disabled = "1" })
        </div> 
    </bs-row>
    <bs-row>
        <bs-label>@L("LeaveType")<bs-star></bs-star></bs-label>
        <div class="col-md-4">
            @await Component.InvokeAsync(typeof(DataConfigSelectorViewComponent), new { configCode = "LeaveType", tagName = "LeaveType", selectedValue = Model.Leave.LeaveType, required = "1" })
        </div>
        <bs-label>@L("Title")<bs-star></bs-star></bs-label>
        <bs-input name="Title" value="@Model.Leave.Title" maxlength="50" requried="requried"></bs-input>       
    </bs-row>
    <bs-row>
        <bs-label>@L("Description")</bs-label>
        <bs-input bs-width="10" name="Description" value="@Model.Leave.Description" maxlength="500"></bs-input>
    </bs-row>
    <bs-row>
        <bs-label>@L("FromTime")<bs-star></bs-star></bs-label>
        <div class="col-md-4">
            @await Component.InvokeAsync(typeof(MaterialDatePickerViewComponent), new { tagName = "FromTime", value = Model.Leave.FromTime.Value.ToString("yyyy-MM-dd HH:mm"), showTime = "1", required = "1" })
        </div>       
        <bs-label>@L("To")<bs-star></bs-star></bs-label>
        <div class="col-md-4">
            @await Component.InvokeAsync(typeof(MaterialDatePickerViewComponent), new { tagName = "EndTime", value = Model.Leave.EndTime.Value.ToString("yyyy-MM-dd HH:mm"), showTime = "1", required = "1" })
        </div>
    </bs-row>
    <bs-row>
        <bs-label>@L("TotalHours")<bs-star></bs-star></bs-label>
        <bs-input name="TotalHours" value="@Model.Leave.TotalHours" type="number" requried="requried"></bs-input>      
        <bs-label>@L("Applicant")<bs-star></bs-star></bs-label>
        <bs-input name="Applicant" value="@Model.Leave.Applicant" maxlength="30" requried="requried"></bs-input>       
    </bs-row>
</bs-form>
<script src="~/view-resources/TaskSample/Leave/_EditModal.js" asp-append-version="true"></script>
<script src="~/lib/moment/min/moment.min.js" asp-append-version="true"></script>
<script src="~/lib/moment/min/locales.min.js" asp-append-version="true"></script>
<script src="~/lib/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js" asp-append-version="true"></script>
<script src="~/view-resources/Views/Shared/Components/MaterialDatePicker/Default.js" asp-append-version="true"></script>





